package B::Stats::Minus;
# Automatically generated by B::Stats Makefile.PL
# Install-time generated data, to calculate the B::Stats overhead.
#   c includes B with its 14 dependencies
#   e adds Opcodes
#   UPPERCASE for -E (features overhead)
$overhead = {
              'e' => {},
              'c' => {
                       'BEGIN' => '0',
                       'Can\'t' => '0',
                       'Compilation' => '0'
                     },
              'r' => {},
              'C' => {
                       'BEGIN' => '0',
                       'Can\'t' => '0',
                       'Compilation' => '0'
                     },
              'R' => {},
              'E' => {}
            };
$test = {
          'nextstate' => 1,
          'null' => 1,
          'enter' => 1,
          'leave' => 1
        };
$test_E = {
            'bit_and' => 2,
            'next' => 2,
            'pushmark' => 15,
            'require' => 2,
            'sassign' => 9,
            'not' => 1,
            'substr' => 6,
            'lineseq' => 7,
            'substcont' => 2,
            'or' => 6,
            'padsv' => 32,
            'leavesub' => 5,
            'seq' => 4,
            'eq' => 1,
            'scope' => 7,
            'values' => 1,
            'cond_expr' => 1,
            'enter' => 7,
            'null' => 69,
            'subst' => 2,
            'const' => 22,
            'bit_or' => 1,
            'entersub' => 9,
            'shift' => 6,
            'delete' => 2,
            'nextstate' => 39,
            'and' => 7,
            'padhv' => 11,
            'leave' => 7,
            'rv2hv' => 3,
            'gv' => 19,
            'method_named' => 1,
            'gvsv' => 12,
            'rv2av' => 10,
            'unshift' => 2,
            'sprintf' => 2,
            'unstack' => 2,
            'helem' => 5,
            'leaveloop' => 2,
            'enterloop' => 2,
            'concat' => 4,
            'complement' => 2,
            'return' => 1,
            'exists' => 6
          };
# $test for -e1
# $test_E for -E1
1;
